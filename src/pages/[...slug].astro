---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Search from '../components/Search.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Types
type PageType = 'notes' | 'projects' | 'articles';
interface Props {
    slug: string;
}

// Route generation
export async function getStaticPaths() {
    const pageTypes: PageType[] = ['notes', 'projects', 'articles'];
    return pageTypes.map(pageType => ({
        params: { slug: pageType }
    }));
}

// Helper functions
const formatDate = (date: Date): string => {
    return date.toLocaleDateString('en-US', {
        month: 'short',
        year: 'numeric',
    });
};

const filterContentByType = (content: CollectionEntry<'content'>[], pageType: PageType) => {
    return content.filter((node) => {
        if (!node.data) return false;
        
        switch (pageType) {
            case 'notes':
                return !node.data.filetags?.includes('article') && !node.data.filetags?.includes('project');
            case 'projects':
                return node.data.filetags?.includes('project');
            case 'articles':
                return node.data.filetags?.includes('article');
            default:
                return false;
        }
    });
};

const sortContentByDate = (content: CollectionEntry<'content'>[]) => {
    return content.sort((a, b) => {
        const dateA = a.data.date?.valueOf() || 0;
        const dateB = b.data.date?.valueOf() || 0;
        return dateB - dateA;
    });
};

// Page setup
const { slug } = Astro.params as Props;
const pageType = slug as PageType;
const collection = await getCollection('content');

// Process content
const filteredContent = filterContentByType(collection, pageType);
const sortedContent = sortContentByDate(filteredContent);
const pageTitle = pageType.charAt(0).toUpperCase() + pageType.slice(1);

---

<!doctype html>
<html lang="en">
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    </head>
    <body>
        <a href="#main" class="skip-link">Skip to main content</a>
        <main id="main">
            <h1><a href="/">{pageTitle}</a></h1>
            <article>
                {
                    (() => {
                        type GroupedContent = { date: string; items: typeof sortedContent };
                        const grouped: GroupedContent[] = [];
                        let currentGroup: GroupedContent = { date: '', items: [] };
                        
                        sortedContent.forEach((node) => {
                            const dateStr = node.data.date ? formatDate(node.data.date) : '';
                            if (dateStr !== currentGroup.date) {
                                if (currentGroup.items.length > 0) {
                                    grouped.push(currentGroup);
                                }
                                currentGroup = { date: dateStr, items: [node] };
                            } else {
                                currentGroup.items.push(node);
                            }
                        });
                        
                        if (currentGroup.items.length > 0) {
                            grouped.push(currentGroup);
                        }
                        
                        return grouped.map((group) => (
                            <div>
                                {group.date && <div class="date">{group.date}</div>}
                                <ul>
                                    {group.items.map((node) => (
                                        <li>
                                            <a href={`/content/${node.data.slug}/`}>
                                                {node.data.title}
                                            </a>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        ));
                    })()
                }
            </article>
            
            <Footer />
        </main>
        <Search />
    </body>
</html>
