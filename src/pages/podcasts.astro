---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`Podcasts - ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
  </head>
  <body class="bg-white text-zinc-900 antialiased font-sans dark:bg-zinc-900 dark:text-zinc-100">
    <a href="#main" class="sr-only focus:not-sr-only fixed left-2 top-2 z-50 rounded border border-gray-300 bg-white px-3 py-2 text-gray-900 shadow focus:outline-none dark:border-gray-700 dark:bg-gray-900 dark:text-gray-100">Skip to main content</a>
    <main id="main" class="mx-auto max-w-prose px-4 py-8">
      <header class="prose prose-zinc dark:prose-invert">
        <h1>Podcasts</h1>
      </header>
      <article class="prose prose-zinc dark:prose-invert">
        <p id="episodes-note" hidden></p>
        <ul id="episodes"></ul>
      </article>

      <Footer />
    </main>
  </body>
</html>

<script>
  const listEl = document.getElementById('episodes');
  const noteEl = document.getElementById('episodes-note');

  function mimeFor(url: string) {
    const u = url.toLowerCase();
    if (u.endsWith('.m4a') || u.includes('.m4a?') || u.endsWith('.mp4')) return 'audio/mp4';
    return 'audio/mpeg';
  }

  function titleFromKey(key: string) {
    const base = key.split('/').pop() || key;
    const nameWithoutExt = base.replace(/\.[^.]+$/, '');
    // Handle format: s1e1-<file name>
    const match = nameWithoutExt.match(/^s\d+e\d+-(.+)$/);
    if (match) {
      return match[1].replace(/[\-_]+/g, ' ').trim();
    }
    return nameWithoutExt.replace(/[\-_]+/g, ' ').trim();
  }

  async function load() {
    try {
      const res = await fetch('/api/podcasts');
      if (!res.ok) throw new Error('failed to load');
      const data = await res.json();
      const items = (data.items || []).filter((i: any) => /\.(mp3|m4a)$/i.test(i.key));

      if (items.length === 0) {
        if (noteEl) {
          noteEl.hidden = false;
          noteEl.textContent = 'No audio files found.';
        }
        return;
      }

      for (const it of items) {
        const li = document.createElement('li');
        li.className = 'episode';
        const title = titleFromKey(it.key);
        li.innerHTML = `
          <p>${title}</p>
          <audio controls preload="none" class="w-full">
            <source src="${it.url}" type="${mimeFor(it.url)}" />
          </audio>
        `;
        if (listEl) {
          listEl.appendChild(li);
        }
      }
    } catch (e) {
      if (noteEl) {
        noteEl.hidden = false;
        noteEl.textContent = 'Unable to load episodes.';
      }
    }
  }

  load();
</script>
