---
import BaseHead from '../components/BaseHead.astro';
import SiteHeader from '../components/SiteHeader.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import { SITE_HOME, formatWithEmail } from '../lib/site';

const collection = await getCollection('content');
const nodes = collection
    .filter((node) => node.data)
    .sort((a, b) => {
        const dateA = a.data.date?.valueOf() || 0;
        const dateB = b.data.date?.valueOf() || 0;
        return dateB - dateA;
    });

const featuredProjects = nodes
  .filter((node) => node.data.filetags?.includes('project'))
  .slice(0, 5);

const recentArticles = nodes
  .filter((node) => node.data.filetags?.includes('article'))
  .slice(0, 5);

const projectHighlights = featuredProjects.slice(0, 2);
const writingHighlights = recentArticles.slice(0, 2);
const homeConfig = SITE_HOME;
const connectLead = formatWithEmail(homeConfig.connect.lead);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
  <body>
    <SiteHeader />
    <main id="main" class="org-content">
      <section class="mb-12">
        <h1>{SITE_TITLE}</h1>

        {homeConfig.heroIntro.map((paragraph) => (
          <div class="org-paragraph mb-4">{paragraph}</div>
        ))}

      </section>

      {projectHighlights.length > 0 && (
        <section id="projects" class="mb-12">
          <h2>{homeConfig.projects.title}</h2>
          <div class="org-list mb-4">
            {projectHighlights.map((node) => (
              <div class="org-list-item">
                <a href={`/content/${node.data.slug}/`} class="org-link">{node.data.title}</a>
                <div class="text-sm text-neutral-600 dark:text-neutral-400">
                  {node.data.description || homeConfig.projects.itemFallbackDescription}
                </div>
              </div>
            ))}
          </div>
          <div class="org-paragraph">
            <a href={homeConfig.projects.ctaHref} class="org-link">{homeConfig.projects.ctaLabel}</a>
          </div>
        </section>
      )}

      {writingHighlights.length > 0 && (
        <section id="writing" class="mb-12">
          <h2>{homeConfig.writing.title}</h2>
          <div class="org-list mb-4">
            {writingHighlights.map((node) => (
              <div class="org-list-item">
                <a href={`/content/${node.data.slug}/`} class="org-link">{node.data.title}</a>
                <div class="text-sm text-neutral-600 dark:text-neutral-400">
                  {node.data.description || homeConfig.writing.itemFallbackDescription}
                </div>
              </div>
            ))}
          </div>
          <div class="org-paragraph">
            <a href={homeConfig.writing.ctaHref} class="org-link">{homeConfig.writing.ctaLabel}</a>
          </div>
        </section>
      )}

      <section id="connect" class="mb-12">
        <h2>{homeConfig.connect.heading}</h2>
        <div class="org-paragraph" set:html={connectLead ?? ''}></div>
        {homeConfig.connect.links.length > 0 && (
          <div class="org-list mt-4">
            {homeConfig.connect.links.map((link) => (
              <div class="org-list-item">
                <a
                  href={link.href}
                  class="org-link"
                  target={link.external ? '_blank' : undefined}
                  rel={link.external ? 'noopener noreferrer' : undefined}
                >
                  {link.label}
                </a>
              </div>
            ))}
          </div>
        )}
      </section>

      <Footer />
    </main>
  </body>
</html>
