---
import '../styles/tailwind.css';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new globalThis.URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/favicon.svg' } = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<link rel="preconnect" href="https://www.googletagmanager.com" crossorigin>
<link rel="canonical" href={canonicalURL} />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new globalThis.URL(image, Astro.url)} />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new globalThis.URL(image, Astro.url)} />

<!-- Structured data for better SEO -->
<script type="application/ld+json" is:inline>
{
  "@context": "https://schema.org",
  "@type": "Person",
  "name": "Mayphus Tang",
  "description": "A dad, a maker, a perpetual learner",
  "url": "https://mayphus.org",
  "sameAs": [
    "https://github.com/mayphus"
  ]
}
</script>

<!-- Auto theme switching based on system preference -->
<script is:inline>
  // Set theme immediately to prevent flash
  function setTheme() {
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    document.documentElement.classList.toggle('dark', prefersDark);
  }
  
  // Apply theme immediately
  setTheme();
  
  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', setTheme);
</script>

<!-- Optimized Google Analytics - loads after critical resources -->
<script is:inline>
  // Initialize dataLayer immediately
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  
  // Load analytics after page is interactive
  if ('requestIdleCallback' in window) {
    requestIdleCallback(() => {
      const script = document.createElement('script');
      script.async = true;
      script.src = 'https://www.googletagmanager.com/gtag/js?id=G-XLGB1ZDPYC';
      document.head.appendChild(script);
      gtag('js', new Date());
      gtag('config', 'G-XLGB1ZDPYC');
    });
  } else {
    // Fallback for browsers without requestIdleCallback
    setTimeout(() => {
      const script = document.createElement('script');
      script.async = true;
      script.src = 'https://www.googletagmanager.com/gtag/js?id=G-XLGB1ZDPYC';
      document.head.appendChild(script);
      gtag('js', new Date());
      gtag('config', 'G-XLGB1ZDPYC');
    }, 1000);
  }
</script>
